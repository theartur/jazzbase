var start = +new Date;

var jazzbase = require("jazzbase");
var channel = jazzbase("stress");

var countBack = 0;
var cmp = {};
var limit = process.argv[2] || 2240;

var totalStress = limit;
while (totalStress--) {
    var timestamp = +new Date;
    var rndKey = "" + Math.random() + timestamp;
    var rndData = "" + Math.random() + timestamp;
    
    cmp[rndKey] = rndData;
    
    totalLen = Object.keys(cmp).length;
/////////////     console.log("should be totalLen > countBack", totalLen, countBack, totalLen > countBack);
   
//     console.log("SET", rndKey, rndData);
    channel.set(rndKey, rndData);
//     console.log("should be totalLen > countBack", totalLen, countBack, totalLen > countBack);
    countBack++;
///////////// console.log("should be totalLen == countBack", totalLen, countBack, totalLen == countBack);
//     console.log(countBack + " -- " + rndKey + " written");

    var data = channel.get(rndKey);
    
//     console.log("~~ ", cmp[rndKey], data, cmp[rndKey] === data);

    totalLen = Object.keys(cmp).length;
    
    if (cmp[rndKey] === data && totalLen == countBack) {
//                             console.log(countBack + " -- " + rndKey + " IS CONSISTENT :) ");
        //console.log("ok");
    } else {
        console.log(">>> ERROR: " + countBack + " -- " + rndKey + " IS BROKEN :((( ");
        console.log("cmp[rndKey] === data", cmp[rndKey], data, cmp[rndKey] === data);
        console.log("totalLen != countBack", totalLen, countBack, totalLen != countBack);
        
        throw new Error("INCONSISTENT DATA");
    }
}

console.log("( " + ((+new Date) - start) + " ms ) --- LOADED ALL OPS ---  ", Object.keys(cmp).length, countBack);

process.on('exit', function () {
    console.log("( " + ((+new Date) - start) + " ms ) --- END --- saved ", Object.keys(cmp).length, countBack);
});