var channel = jazzbase("stress-client");

var countBack = 0;
var cmp = {};
var limit = 1000;

var totalStress = limit;
while (totalStress--) {
    var rndKey = Math.random();
    var rndData = Math.random();
    
    cmp[rndKey] = rndData;
    
    console.log("SET", rndKey, rndData);
    channel.set(rndKey, rndData, addAnotherRnd(rndKey));
}

function addAnotherRnd(who) {
    return function (err) {
        countBack++;
        
        if (err) {
            console.log(" >>> ERROR: ", err);
        } else {
            console.log(countBack + " -- " + who + " written");
            
            channel.get(who, function (data) {
                data = parseFloat(data);
                
                console.log("~~ ", cmp[who], data, parseFloat(data), cmp[who] === data);
                
                if (cmp[who] === data) {
//                     console.log(countBack + " -- " + who + " IS CONSISTENT :) ");
                    console.log(".");
                } else {
                    console.log(">>> ERROR: " + who + " IS BROKEN :((( ");
                    console.log(">>> SHOULD BRING: " + cmp[who]);
                    console.log(">>> BUT BROUGHT: " + data);
                    throw new Error("INCONSISTENT DATA");
                }
            });

            if (countBack >= limit) {
                console.log(" --- END --- ", Object.keys(cmp).length);
            }
        }
    };
}