(function(){

    var ioQueue = [];
    var url = location.origin + ":1337/";

    function ajax(data, returns) {
        
        if (!returns) {
            throw new Error("NO RETURNS! :(");
        }
        
        var jazzcript = new XMLHttpRequest();
        var query = [];

        var keys = Object.keys(data);
        var index = keys.length;

        while (index--) {
            if (keys[index] !== "returns") {
                query.push(keys[index] + "=" + data[keys[index]]);
            }
        }

        jazzcript.open("get", url + "?" + query.join("&"));
        jazzcript.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                returns(this.responseText);
            }
        };

        jazzcript.send();
        
        return jazzcript;
    }
    
    function processTask(task, returns) {
        if (task.io == 'get') {
            return ajax({channel:task.channel, key:task.key}, returns);

        } else if (task.io == 'set') {
            return ajax({channel:task.channel, key:task.key, data:task.data}, returns);

        } else if (task.io == 'push') {
            return ajax({channel:task.channel, key:task.key, push:task.data}, returns);
        }
    }

    var activeProcessQueue = false;
    function processQueue(lastTaskEnded) {
        if ( ! activeProcessQueue || lastTaskEnded) {
            activeProcessQueue = true;
            var task = ioQueue.shift();
            if (task) {
                processTask(task, function () {
                    task.returns.apply(this, arguments);
                    processQueue(true);
                });
            } else {
                activeProcessQueue = false;
            }
        }
    }

    function queueTask(task) {
        ioQueue.push(task);
        processQueue();
    }

    function jazzbase(channel) {
        return {
            get: function (key, returns) {
                queueTask({io:'get', channel:channel, key:key, returns:returns});
            },
            set: function (key, data, returns) {
                queueTask({io:'set', channel:channel, key:key, data:data, returns:returns});
            },
            push: function (key, data, returns) {
                queueTask({io:'push', channel:channel, key:key, data:data, returns:returns});
            }
        };
    }

    window.jazzbase = jazzbase;
})();