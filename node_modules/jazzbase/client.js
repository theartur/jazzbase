(function(){

    var jazzbaseCallbacks = {};

    var ioQueue = [];
    
    var url = location.origin + ":1337/";

    function ajax(params, returns) {
        var req = new XMLHttpRequest();
        var query = [];

        var paramKeys = Object.keys(params);
        var iteration = paramKeys.length;

        while (iteration--) {
            if (paramKeys[iteration] !== "returns") {
                query.push(paramKeys[iteration] + "=" + params[paramKeys[iteration]]);
            }
        }

        req.open("get", url + "?" + query.join("&"));
        req.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                if (returns) {
                    returns(this.responseText);
                }
            }
        };

        req.send();
    }

    function jazzbaseGet(channel, key, returns) {
        ajax({channel:channel, key:key, returns:returns});
    }

    function jazzbaseSet(channel, key, data, returns) {
        ajax({channel:channel, key:key, data:data, returns:returns});

    }

    function jazzbasePush(channel, key, data, returns) {
        ajax({push:true, channel:channel, key:key, data:data, returns:returns});
    }

    function processTask(task, returns) {
        if (task.io == 'set') {
            return jazzbaseSet(task.channel, task.key, task.data, returns);

        } else if (task.io == 'get') {
            return jazzbaseGet(task.channel, task.key, returns);

        } else if (task.io == 'push') {
            return jazzbasePush(task.channel, task.key, task.data, returns);

        } else {
            return null;
        }
    }

    var activeProcessQueue = false;
    function processQueue(force) {
        if ( ! activeProcessQueue || force) {
            activeProcessQueue = true;
            var task = ioQueue.shift();
            if (task) {
                processTask(task, function () {
                    task.returns.apply(this, arguments);
                    processQueue(true);
                });
            } else {
                activeProcessQueue = false;
            }
        }
    }

    function queueTask(task) {
        ioQueue.push(task);
        processQueue();
    }

    function jazzbaseQueueGet(channel, key, returns) {
        queueTask({io:'get', channel:channel, key:key, returns:returns});
    }

    function jazzbaseQueueSet(channel, key, data, returns) {
        queueTask({io:'set', channel:channel, key:key, data:data, returns:returns});
    }

    function jazzbaseQueuePush(channel, key, data, returns) {
        queueTask({io:'push', channel:channel, key:key, data:data, returns:returns});
    }

    function jazzbase(channel) {
        return {
            get: function (key, returns) {
                jazzbaseQueueGet(channel, key, returns);
            },
            set: function (key, data, returns) {
                jazzbaseQueueSet(channel, key, data, returns);
            },
            push: function (key, data, returns) {
                jazzbaseQueuePush(channel, key, data, returns);
            }
        };
    }

    window.jazzbase = jazzbase;
})();